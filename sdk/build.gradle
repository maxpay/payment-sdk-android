apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'maven-publish'

ext.kotlin_version = "1.4.0"
ext.core_ktx_version = "1.3.2"
ext.app_compat_version = "1.2.0"
ext.material_version = "1.2.1"
ext.constraint_layout_version = "2.0.2"
ext.navigation_ktx_version = "2.3.1"



ext.retrofit_version = "2.7.2"

ext.koin_version = "2.2.0"

ext.glide_version = "4.11.0"
ext.ioReactivexRxjava2Rxandroid = "2.0.2"
ext.ioReactivexRxjava2Rxjava = "2.2.8"
ext.ioReactivexRxjava2Rxkotlin = "2.3.0"
ext.gson_version = "2.8.5"
ext.browser_version = "1.2.0"
ext.androidx_legacy_version = "1.0.0"
ext.googleAuth_version = "17.0.0"
ext.okhttp_logging_version = "3.14.0"

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"
    flavorDimensions "default"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    productFlavors {
        dev {
            buildConfigField "String", "BASE_URL", "\"https://gateway-sandbox.maxpay.com/api/\""

        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),\
                            'proguard-rules.pro', \
                            '../proguard-internal-rules.pro',\
                            '../proguard-rxjava2-rules.pro',\
                            '../proguard-retrofit2-rules.pro',\
                            '../proguard-okhttp3-rules.pro'
        }
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
//afterEvaluate {
//    publishing {
//        publications {
//            // Creates a Maven publication called "release".
////            release(MavenPublication) {
////                // Applies the component for the release build variant.
////                from components.release
////
////                // You can then customize attributes of the publication as shown below.
////                groupId = 'com.maxpay.sdk'
////                artifactId = 'final'
////                version = '1.0'
////            }
////            // Creates a Maven publication called “debug”.
//            debug(MavenPublication) {
//                // Applies the component for the debug build variant.
//                from components.debug
//
//                groupId = 'com.maxpay.sdk'
//                artifactId = 'final-debug'
//                version = '1.0'
//            }
//        }
//        repositories {}
//    }
//}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "source"
}

publishing {
    publications {
        bar(MavenPublication) {
            groupId 'com.maxpay.sdk'
            artifactId 'bar'
            version '0.1'
            artifact(sourceJar)
            artifact("$buildDir/outputs/aar/sdk-dev-debug.aar")
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    if(it.group != null && (it.name != null || "unspecified".equals(it.name)) && it.version != null)
                    {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url "$buildDir/repo"
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.appcompat:appcompat:$app_compat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_ktx_version"

    // di
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    implementation "org.koin:koin-androidx-scope:$koin_version"
    implementation "org.koin:koin-android:$koin_version"
    implementation "io.reactivex.rxjava2:rxandroid:$ioReactivexRxjava2Rxandroid"
    implementation "io.reactivex.rxjava2:rxjava:$ioReactivexRxjava2Rxjava"
    implementation "io.reactivex.rxjava2:rxkotlin:$ioReactivexRxjava2Rxkotlin"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "com.google.code.gson:gson:$gson_version"
    implementation "androidx.legacy:legacy-support-v4:$androidx_legacy_version"
    implementation "androidx.browser:browser:$browser_version"
}
